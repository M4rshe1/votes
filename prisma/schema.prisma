generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum VoteUserRelation {
  OWNER
  VOTER
}

enum VoteField {
  UPVOTE
  DOWNVOTE
  NEUTRAL
}

model User {
  id        String         @id @unique @default(cuid())
  email     String         @unique
  name      String?
  role      Role           @default(USER)
  votes     VoteUser[]
  voteItems UserVoteItem[]
}

model VoteUser {
  id       String           @id @unique @default(cuid())
  userId   String
  voteId   String
  relation VoteUserRelation @default(VOTER)
  user     User             @relation(fields: [userId], references: [id])
}

model Vote {
  id               String         @id @unique @default(cuid())
  title            String
  description      String?
  usersCanAddItems Boolean        @default(false)
  items            VoteItem[]
  userVotes        UserVoteItem[]
  isClosed         Boolean        @default(false)
  endDate          DateTime?
  createdAt        DateTime       @default(now())
}

model VoteItem {
  id          String         @id @unique @default(cuid())
  title       String
  description String?
  gmaps       String?
  vote        Vote           @relation(fields: [voteId], references: [id])
  voteId      String
  userVotes   UserVoteItem[]
}

model UserVoteItem {
  id         String    @id @unique @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  voteItem   VoteItem  @relation(fields: [voteItemId], references: [id])
  voteItemId String
  vote       Vote      @relation(fields: [voteId], references: [id])
  voteId     String
  voteType   VoteField @default(NEUTRAL)
}
